// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Recipe {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  titleImage  String
  stepImages  String[]
  name        String
  diffculty   String
  time        String
  ingredients Json
  steps       String[]
  tags        String[]
  viewers     Int
  ratings     Rating[]
  comments    Comment[]
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String    @db.ObjectId
  createdAt   DateTime  @default(now())
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  username    String    @unique
  email       String    @unique
  password    String
  role        String    @default("member")
  createdAt   DateTime  @default(now())
  image       String    @default("")
  recipes     Recipe[]
  ratings     Rating[]
}

model Comment {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  comment     String
  recipe      Recipe    @relation(fields: [recipeId], references: [id])
  recipeId    String    @db.ObjectId
  createdAt   DateTime  @default(now())
}

model Rating {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  value      Int      
  recipe     Recipe   @relation(fields: [recipeId], references: [id])
  recipeId   String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  createdAt  DateTime @default(now())
}
